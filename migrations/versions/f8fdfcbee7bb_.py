"""empty message

Revision ID: f8fdfcbee7bb
Revises: 
Create Date: 2020-09-05 22:16:27.042767

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f8fdfcbee7bb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('zone',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('zone', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('expire_date', sa.Date(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pharmacy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('phone_number', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=False),
    sa.Column('support', sa.String(length=200), nullable=True),
    sa.Column('date_of_joining', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['zone_id'], ['zone.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.String(length=30), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('username', sa.String(length=200), nullable=True),
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=True),
    sa.Column('date_of_joining', sa.Date(), nullable=True),
    sa.Column('zone_id', sa.Integer(), nullable=True),
    sa.Column('role', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['zone_id'], ['zone.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('doctor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('phone', sa.String(length=12), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('zone_id', sa.Integer(), nullable=True),
    sa.Column('speciality', sa.String(length=200), nullable=False),
    sa.Column('d_class', sa.String(length=2), nullable=True),
    sa.Column('pharmacy_id', sa.Integer(), nullable=False),
    sa.Column('support', sa.String(length=200), nullable=False),
    sa.Column('date_of_joining', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacy.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zone.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('history_of_company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=30), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('acceptance_of_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('acceptance', sa.String(length=200), nullable=False),
    sa.Column('pharmacy_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacy.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('availability_of_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('available', sa.Boolean(), nullable=False),
    sa.Column('pharmacy_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacy.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('history_of_marketing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=30), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('pharmacy_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacy.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('history_of_user_activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=30), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=False),
    sa.Column('pharmacy_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacy.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zone.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=30), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=False),
    sa.Column('pharmacy_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(length=200), nullable=True),
    sa.Column('date_of_order', sa.Date(), nullable=False),
    sa.Column('approved', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacy.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zone.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('history_of_doctor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('visit_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['visit_id'], ['history_of_user_activity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('history_of_pharmacy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pharmacy_id', sa.Integer(), nullable=False),
    sa.Column('visit_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacy.id'], ),
    sa.ForeignKeyConstraint(['visit_id'], ['history_of_user_activity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item_order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('bonus', sa.Integer(), nullable=True),
    sa.Column('gift', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('user_id', sa.String(length=30), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('pharmacy_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('acceptance_of_item_id', sa.Integer(), nullable=False),
    sa.Column('availabilty_of_item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['acceptance_of_item_id'], ['acceptance_of_item.id'], ),
    sa.ForeignKeyConstraint(['availabilty_of_item_id'], ['availability_of_item.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['pharmacy_id'], ['pharmacy.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zone.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.Column('seen', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['report.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notification')
    op.drop_table('report')
    op.drop_table('item_order')
    op.drop_table('history_of_pharmacy')
    op.drop_table('history_of_doctor')
    op.drop_table('order')
    op.drop_table('history_of_user_activity')
    op.drop_table('history_of_marketing')
    op.drop_table('availability_of_item')
    op.drop_table('acceptance_of_item')
    op.drop_table('history_of_company')
    op.drop_table('doctor')
    op.drop_table('user')
    op.drop_table('pharmacy')
    op.drop_table('item')
    op.drop_table('zone')
    op.drop_table('company')
    # ### end Alembic commands ###
